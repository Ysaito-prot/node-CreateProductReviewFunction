<!DOCTYPE html>
<html lang="ja">
    <head>
        <meta charset="UTF-8">
        <title>Review list</title>
        <link type="text/css" rel="stylesheet" href="css/style.css">
    </head>
    <body>
        <section id="app">
            <h1 class="title">このレビューについてのレビュー</h1>
            <canvas id="stage"></canvas>
            <div class="btn"><button class="createBtn"><a href="/create">レビューを書く</a></button></div>
            <span> 並び替え：<select class="search__sorting" name="sort">
                    <option value="選択してください">選択してください</option>
                    <option value="高い順">高い順</option>
                    <option value="低い順">低い順</option>
                </select>
            </span>
            <span> フィルター：<select class="search__filter" name="filter">
                    <option value="選択してください">選択してください</option>
                    <option value="1">星1</option>
                    <option value="2">星2</option>
                    <option value="3">星3</option>
                    <option value="4">星4</option>
                    <option value="5">星5</option>
                </select>
            </span>
            <div class="list">
                <ul class="reviewList">
                    <% users.forEach(function (value) { %>
                        <li class="listItem">
                            <div class="userInfo">
                                <h2 class="userName"><%= value.username %></h2>
                                <div class="age"> 年齢：<%= value.age %>歳 </div>
                            </div>
                            <span class="star5_rating"></span>
                            <span class="rating">
                                <%= value.rating %>
                            </span>
                            <div class="reason">
                                <%= value.reason %>
                            </div>
                            <div class="edit"><button class="editBtn"><a href="/edit/<%= value.id %>">レビューの更新</a></button></div>
                        </li>
                        <% }); %>
                </ul>
            </div>
        </section>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.1.4/Chart.min.js"></script>
        <script>
            let users = JSON.parse('<%= JSON.stringify(users) %>'.replace(/&#34;/g, '"'));
            let ratingASC = JSON.parse('<%= JSON.stringify(ratingASC) %>'.replace(/&#34;/g, '"'));
            let ratingDESC = JSON.parse('<%= JSON.stringify(ratingDESC) %>'.replace(/&#34;/g, '"'));
            let rating5users = JSON.parse('<%= JSON.stringify(rating5users) %>'.replace(/&#34;/g, '"'));
            let rating4users = JSON.parse('<%= JSON.stringify(rating4users) %>'.replace(/&#34;/g, '"'));
            let rating3users = JSON.parse('<%= JSON.stringify(rating3users) %>'.replace(/&#34;/g, '"'));
            let rating2users = JSON.parse('<%= JSON.stringify(rating2users) %>'.replace(/&#34;/g, '"'));
            let rating1users = JSON.parse('<%= JSON.stringify(rating1users) %>'.replace(/&#34;/g, '"'));

            // 評価マークの表示
            let star5_rating = document.querySelectorAll('.star5_rating');
            for (let i = 0; i < users.length; i++) {
                for (let j = 0; j < 5.5; j += 0.5) {
                    if (users[i].rating === j) {
                        star5_rating[i].setAttribute('data-rate', j);
                    }
                }
            }

            // コンポーネントのルートノード
            let nodeApp = document.querySelector('#app');

            // セレクトボックスのイベントハンドラを登録
            // 並び替え
            let nodeSelect = nodeApp.querySelector('.search__sorting');
            nodeSelect.addEventListener('change', onOrderChanged, false);
            // フィルター
            let nodeSelect2 = nodeApp.querySelector('.search__filter');
            nodeSelect2.addEventListener('change', onFilterChanged, false);

            // 並び順の変更イベントハンドラ
            function onOrderChanged(event) {
                //「選択してください」が選択されている場合
                if (event.target.value === '選択してください') {
                    listChange(users);
                }
                // 「高い順」が選択されている場合
                else if (event.target.value === '高い順') {
                    listChange(ratingDESC);
                }
                // 「低い順」が選択されている場合
                else if (event.target.value === '低い順') {
                    listChange(ratingASC);
                }
            }

            // フィルターの変更イベントハンドラ
            function onFilterChanged(event) {
                //「選択してください」が選択されている場合
                if (event.target.value === '選択してください') {
                    listChange(users);
                }
                //「星5」が選択されている場合
                if (event.target.value === '5') {
                    listChange(rating5users);
                }
                //「星4」が選択されている場合
                if (event.target.value === '4') {
                    listChange(rating4users);
                }
                //「星3」が選択されている場合
                if (event.target.value === '3') {
                    listChange(rating3users);
                }
                //「星2」が選択されている場合
                if (event.target.value === '2') {
                    listChange(rating2users);
                }
                //「星1」が選択されている場合
                if (event.target.value === '1') {
                    listChange(rating1users);
                }
            }

            // リスト変更の関数
            function listChange(x) {
                let nodeList = nodeApp.querySelector('.reviewList');
                let newList = [];
                newList = x;
                nodeList.innerHTML = "";
                for (let i = 0; i < newList.length; i++) {
                    nodeList.insertAdjacentHTML('beforeend', `
                        <li class="listItem">
                            <div class="userInfo">
                                <h2 class="userName">${newList[i].username}</h2>
                                <div class="age"> 年齢：${newList[i].age} 歳 </div>
                            </div>
                            <span class="star5_rating"></span>
                            <span class="rating">
                                ${newList[i].rating}
                            </span>
                            <div class="reason">
                                ${newList[i].reason}
                            </div>
                            <div class="edit"><button class="editBtn"><a href="/edit/${newList[i].id}">レビューの更新</a></button></div>
                        </li>
                       `)
                }
            }

            // 年代毎のグラフ作成
            //「年代別データ」
            var mydata = {
                labels: ["20代", "30代", "40代"],
                datasets: [
                    {
                        label: '評価数',
                        hoverBackgroundColor: "rgba(255,99,132,0.3)",
                        data: [],
                    }
                ]
            };
            //「オプション設定」
            var options = {
                title: {
                    display: true,
                    text: '年代別評価数'
                },
                scales: {
                    yAxes: [{
                        ticks: {
                            display: true,
                            suggestedMin: 0,
                            suggestedMax: 80,
                            stepSize: 10,
                            beginAtZero: true
                        }
                    }]
                },
                spanGaps: true,
            };
            let ageTokei = [
                { age: "20代", count: 0 },
                { age: "30代", count: 0 },
                { age: "40代", count: 0 },
            ];
            for (let j = 0; j < users.length; j++) {
                if (users[j].age >= 20 && users[j].age < 30) {
                    ageTokei[0].count++;
                }
                if (users[j].age >= 30 && users[j].age < 40) {
                    ageTokei[1].count++;
                }
                if (users[j].age >= 40 && users[j].age < 50) {
                    ageTokei[2].count++;
                }
            }
            mydata.datasets[0].data = [ageTokei[0].count, ageTokei[1].count, ageTokei[2].count]
            var canvas = document.getElementById('stage');
            var chart = new Chart(canvas, {
                type: 'bar',  //グラフの種類
                data: mydata,  //表示するデータ
                options: options  //オプション設定
            });
            console.log(mydata.datasets[0].data)
        </script>
    </body>
</html>
